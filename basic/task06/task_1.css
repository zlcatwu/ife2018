body {
  margin: 0;
}

.left,
.middle,
.right {
  height: 200px;
}

.left {
  background-color: #f00;
}

.middle {
  background-color: #0f0;
}

.right {
  background-color: #00f;
}

.body {
  margin: 1rem 0;
}

.desc {
  text-align: center;
}

/* 实现一个两栏布局，左侧占30%宽度，右侧占70%宽度，使用Float布局 */

.container-1-1 {
  overflow: auto;
  zoom: 1;
}

.container-1-1 .left {
  float: left;

  width: 30%;
}

.container-1-1 .right {
  float: left;

  width: 70%;
}

/* 实现一个两栏布局，左侧占30%宽度，右侧占70%宽度，使用Position布局 */

.container-1-2 {
  position: relative;

  height: 200px;
}

.container-1-2 .left {
  position: absolute;

  width: 30%;
}

.container-1-2 .right {
  position: absolute;

  width: 70%;
  margin-left: 30%;
}

/* 实现一个两栏布局，左侧占30%宽度，右侧占70%宽度，使用Flexbox布局 */

.container-1-3 {
  display: flex;
}

.container-1-3 .left {
  flex: 3;
}

.container-1-3 .right {
  flex: 7;
}

/* 实现一个两栏布局，左侧固定宽度，右侧根据浏览器宽度进行自适应变化，使用Float布局 */

.container-2-1 {
  overflow: auto;
  zoom: 1;
}

.container-2-1 .left {
  float: left;
  
  width: 200px;
}

.container-2-1 .right {
  float: left;

  width: calc(100% - 200px);
}

/* 实现一个两栏布局，左侧固定宽度，右侧根据浏览器宽度进行自适应变化，使用Position布局 */

.container-2-2 {
  height: 200px;
}

.container-2-2 .left {
  position: absolute;

  width: 200px;
}

.container-2-2 .right {
  position: absolute;

  width: calc(100% - 200px);
  margin-left: 200px;
}

/* 实现一个两栏布局，左侧固定宽度，右侧根据浏览器宽度进行自适应变化，使用Flexbox布局 */

.container-2-3 {
  display: flex;
}

.container-2-3 .left {
  flex: 0 0 200px;
}

.container-2-3 .right {
  flex: 1;
}

/* 实现一个两栏布局，右侧固定宽度，左侧根据浏览器宽度进行自适应变化，使用Float布局 */

.container-3-1 {
  overflow: auto;
  zoom: 1;
}

.container-3-1 .left {
  float: left;

  width: calc(100% - 200px);
}

.container-3-1 .right {
  float: left;

  width: 200px;
}

/* 实现一个两栏布局，右侧固定宽度，左侧根据浏览器宽度进行自适应变化，使用Position布局 */

.container-3-2 {
  position: relative;

  height: 200px;
}

.container-3-2 .left {
  position: absolute;

  width: calc(100% - 200px);
}

.container-3-2 .right {
  position: absolute;
  right: 0;
  
  width: 200px;
}

/* 实现一个两栏布局，右侧固定宽度，左侧根据浏览器宽度进行自适应变化，使用Flexbox布局 */

.container-3-3 {
  display: flex;
}

.container-3-3 .left {
  flex: 1;
}

.container-3-3 .right {
  flex: 0 0 200px;
}

/* 实现一个三栏布局，左侧固定宽度，右侧固定宽度，中间部分宽度随浏览器宽度变化而自适应变化，使用Float布局 */

.container-4-1 {
  overflow: auto;
  zoom: 1;
}

.container-4-1 .left {
  float: left;

  width: 200px;
}

.container-4-1 .middle {
  float: left;

  width: calc(100% - 200px - 200px);
}

.container-4-1 .right {
  float: left;

  width: 200px;
}

/* 实现一个三栏布局，左侧固定宽度，右侧固定宽度，中间部分宽度随浏览器宽度变化而自适应变化，使用Position布局 */

.container-4-2 {
  position: relative;

  height: 200px;
}

.container-4-2 .left {
  position: absolute;

  width: 200px;
}

.container-4-2 .middle {
  position: absolute;
  left: 200px;

  width: calc(100% - 200px - 200px);
}

.container-4-2 .right {
  position: absolute;
  right: 0;

  width: 200px;
}

/* 实现一个三栏布局，左侧固定宽度，右侧固定宽度，中间部分宽度随浏览器宽度变化而自适应变化，使用Flexbox布局 */

.container-4-3 {
  display: flex;
}

.container-4-3 .left,
.container-4-3 .right {
  flex: 0 0 200px;
}

.container-4-3 .middle {
  flex: 1;
}

/* 实现一个三栏布局，左侧固定宽度，中间固定宽度，右侧根据浏览器宽度变化而自适应变化，使用Float布局 */

.container-5-1 {
  overflow: auto;
  zoom: 1;
}

.container-5-1 .left,
.container-5-1 .middle {
  float: left;

  width: 200px;
}

.container-5-1 .right {
  float: left;

  width: calc(100% - 200px - 200px);
}

/* 实现一个三栏布局，左侧固定宽度，中间固定宽度，右侧根据浏览器宽度变化而自适应变化，使用Flexbox布局 */

.container-5-2 {
  position: relative;

  height: 200px;
}

.container-5-2 .left,
.container-5-2 .middle {
  position: absolute;

  width: 200px;

  z-index: 1;
}

.container-5-2 .middle {
  left: 200px;
}

.container-5-2 .right {
  position: absolute;

  box-sizing: border-box;
  width: 100%;
  padding-left: 400px;
}

/* 实现一个三栏布局，左侧固定宽度，中间固定宽度，右侧根据浏览器宽度变化而自适应变化，使用Flexbox布局 */

.container-5-3 {
  display: flex;
}

.container-5-3 .left,
.container-5-3 .middle {
  flex: 0 0 200px;
}

.container-5-3 .right {
  flex: 1;
}
